name: CD

on:
  push:
    tags:
      - 'mvp_v*'
      - 'v*'

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-push-images:
    name: ðŸ”¨ Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push backend image
        id: build-backend
        uses: docker/build-push-action@v4
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USER }}/innoalias-backend:${{ github.sha }}
            docker.io/${{ secrets.DOCKERHUB_USER }}/innoalias-backend:latest

      - name: Build & push frontend image
        id: build-frontend
        uses: docker/build-push-action@v4
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USER }}/innoalias-frontend:${{ github.sha }}
            docker.io/${{ secrets.DOCKERHUB_USER }}/innoalias-frontend:latest

      - name: Build & push nginx image
        id: build-nginx
        uses: docker/build-push-action@v4
        with:
          context: nginx
          file: nginx/Dockerfile
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USER }}/innoalias-nginx:${{ github.sha }}
            docker.io/${{ secrets.DOCKERHUB_USER }}/innoalias-nginx:latest

  deploy-production:
    if: startsWith(github.ref, 'refs/tags/mvp_v')
    name: ðŸš€ Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push-images
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH & deploy
        run: |
          ssh -o StrictHostKeyChecking=no \
              ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "cd /home/InnoAlias \
             && git pull origin main \
             && docker-compose down \
             && docker-compose pull \
             && docker-compose up -d \
             && docker image prune -f"
